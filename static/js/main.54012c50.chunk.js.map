{"version":3,"sources":["components/ReducerSort.js","data.js","components/Profile.js","components/staff.js","components/ListStaff.js","App.js","index.js"],"names":["reducer","state","action","type","newPeople","people","sort","a","b","firstName","buttonType","sortBy","lastName","email","date","data","id","Profile","useState","list","name","setPerson","filter","person","console","log","to","staff","handleCheckProfile","className","map","onClick","defaultState","ListStaff","entries","useReducer","dispatch","handleSort","e","sortType","currentTarget","value","btnType","i","push","entriesValue","placeholder","size","App","path","exact","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54012c50.chunk.js","sourcesContent":["export const reducer = (state, action) => {\r\n    if (action.type === 'fNAME_INCRE') {\r\n        const newPeople = [...state.people];\r\n        newPeople.sort(\r\n            (a, b) => (a.firstName > b.firstName) ? 1 : ((b.firstName > a.firstName) ? -1 : 0)\r\n        )\r\n        return {\r\n            ...state,\r\n            buttonType: true,\r\n            sortBy:'fname',\r\n            people: newPeople\r\n        }\r\n    }\r\n    if (action.type === 'fNAME_DECRE') {\r\n        const newPeople = [...state.people];\r\n        newPeople.sort(\r\n            (a, b) => (a.firstName < b.firstName) ? 1 : ((b.firstName < a.firstName) ? -1 : 0)\r\n        )\r\n        return {\r\n            ...state,\r\n            buttonType: false,\r\n            sortBy:'fname',\r\n            people: newPeople\r\n        }\r\n    }\r\n    if (action.type === 'lNAME_INCRE') {\r\n        const newPeople = [...state.people];\r\n        newPeople.sort(\r\n            (a, b) => (a.lastName > b.lastName) ? 1 : ((b.lastName > a.lastName) ? -1 : 0)\r\n        )\r\n        return {\r\n            ...state,\r\n            buttonType: true,\r\n            sortBy:'lname',\r\n            people: newPeople\r\n        }\r\n    }\r\n    if (action.type === 'lNAME_DECRE') {\r\n        const newPeople = [...state.people];\r\n        newPeople.sort(\r\n            (a, b) => (a.lastName < b.lastName) ? 1 : ((b.lastName < a.lastName) ? -1 : 0)\r\n        )\r\n        return {\r\n            ...state,\r\n            buttonType: false,\r\n            sortBy:'lname',\r\n            people: newPeople\r\n        }\r\n    }\r\n    if (action.type === 'EMAIL_INCRE') {\r\n        const newPeople = [...state.people];\r\n        newPeople.sort(\r\n            (a, b) => (a.email > b.email) ? 1 : ((b.email > a.email) ? -1 : 0)\r\n        )\r\n        return {\r\n            ...state,\r\n            buttonType: true,\r\n            sortBy:'email',\r\n            people: newPeople\r\n        }\r\n    }\r\n    if (action.type === 'EMAIL_DECRE') {\r\n        const newPeople = [...state.people];\r\n        newPeople.sort(\r\n            (a, b) => (a.email < b.email) ? 1 : ((b.email < a.email) ? -1 : 0)\r\n        )\r\n        return {\r\n            ...state,\r\n            buttonType: false,\r\n            sortBy:'email',\r\n            people: newPeople\r\n        }\r\n    }\r\n    if (action.type === 'DATE_INCRE') {\r\n        const newPeople = [...state.people];\r\n        newPeople.sort(\r\n            (a, b) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0)\r\n        )\r\n        return {\r\n            ...state,\r\n            buttonType: true,\r\n            sortBy:'fname',\r\n            people: newPeople\r\n        }\r\n    }\r\n    if (action.type === 'DATE_DECRE') {\r\n        const newPeople = [...state.people];\r\n        newPeople.sort(\r\n            (a, b) => (a.date < b.date) ? 1 : ((b.date < a.date) ? -1 : 0)\r\n        )\r\n        return {\r\n            ...state,\r\n            buttonType: false,\r\n            sortBy:'date',\r\n            people: newPeople\r\n        }\r\n    }\r\n    \r\n    return state;\r\n}","export const data = \r\n  [\r\n        {\r\n            id: \"1\",\r\n            firstName: \"Toma\",\r\n            lastName: \"Cruise\",\r\n            email: \"tomcrusise@gmail.com\",\r\n            date:\"09-06-2020\"\r\n          },\r\n          {\r\n            id: \"2\",\r\n            firstName: \"Maria\",\r\n            lastName: \"Sharapova\",\r\n            email: \"mariamharapova@gmail.com\",\r\n            date:\"\"\r\n\r\n          },\r\n       \r\n           {\r\n            id: \"3\",\r\n            firstName: \"John\",\r\n            lastName: \"Towa\",\r\n            email: \"JohnTowa@gmail.com\",\r\n            date:\"\"\r\n\r\n            },\r\n            {\r\n            id: \"4\",\r\n            firstName: \"Jack\",\r\n            lastName: \"Kuri\",\r\n            email: \"Jack@gmail.com\",\r\n            date:\"\"\r\n\r\n             },\r\n             {\r\n            id: \"5\",\r\n            firstName: \"Tony\",\r\n            lastName: \"Teddy\",\r\n            email: \"Teddy@gmail.com\",\r\n            date:\"\"\r\n\r\n            },\r\n            {\r\n                id: \"6\",\r\n                firstName: \"Laria\",\r\n                lastName: \"Sampon\",\r\n                email: \"Sampon@gmail.com\",\r\n                date:\"\"\r\n\r\n    },\r\n              {\r\n            id: \"7\",\r\n            firstName: \"Mohamet\",\r\n            lastName: \"Huhi\",\r\n            email: \"Huhi@gmail.com\",\r\n            date:\"\"\r\n\r\n            },\r\n            {\r\n            id: \"8\",\r\n            firstName: \"Karia\",\r\n            lastName: \"Vuiton\",\r\n            email: \"Vuiton@gmail.com\",\r\n            date:\"\"\r\n\r\n             },\r\n             {\r\n            id: \"9\",\r\n            firstName: \"Luis\",\r\n            lastName: \"Cater\",\r\n            email: \"Cater@gmail.com\",\r\n            date:\"\"\r\n\r\n            },\r\n            {\r\n            id: \"10\",\r\n            firstName: \"Nova\",\r\n            lastName: \"Sharapova\",\r\n            email: \"mariamharapova@gmail.com\",\r\n            date:\"\"\r\n\r\n    },\r\n               {\r\n            id: \"11\",\r\n            firstName: \"Arcara\",\r\n            lastName: \"Lava\",\r\n            email: \"Lava@gmail.com\",\r\n            date:\"\"\r\n\r\n         },\r\n\r\n]\r\n","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { data} from '../data'\r\n\r\nfunction Profile({ id }) {\r\n    const [list, setList] = useState(data);\r\n    const [person, setPerson] = useState({id:'',name:'',email:'',date:''});\r\n    const personProfile = () => {\r\n        setPerson(list.filter((person) => person.id === id));\r\n        console.log(list);\r\n    }\r\n    return (\r\n        <div>\r\n            <p>{personProfile}</p>    \r\n        <Link to='/'>Back to home</Link>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { useReducer } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './staff.css'\r\nimport Profile from './Profile'\r\n\r\nfunction staff({ people }) {\r\n    const handleCheckProfile = (id) => {\r\n        <Link to={`profile/${id}`} key={id}>\r\n            <Profile id={id}/>\r\n            \r\n        </Link>\r\n    }\r\n    return (\r\n        <div className=\"list-person\">\r\n            {people.map((person) => {\r\n                const { id, firstName, lastName, email, date } = person;\r\n                return (\r\n                    <div key={id} className=\"person-info\">\r\n                        <p>{firstName}</p>\r\n                        <p>{lastName}</p>\r\n                        <p>{email}</p>\r\n                        <p>{date}</p>\r\n                        <button className=\"check-person\" onClick={handleCheckProfile(id)}> Go to profile</button>\r\n                    </div> \r\n                    );   \r\n            })}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default staff\r\n","import React from \"react\";\r\nimport \"./ListStaff.css\";\r\nimport { useState, useEffect, useRef, useReducer } from \"react\";\r\nimport { reducer } from \"./ReducerSort\";\r\nimport { data } from \"../data\";\r\nimport Staff from \"./staff\";\r\nimport { FaSortAlphaDown, FaSortAlphaUp } from \"react-icons/fa\";\r\nconst defaultState = {\r\n  people: data,\r\n  buttonType: false,\r\n};\r\nfunction ListStaff() {\r\n  const [entries, setEntries] = useState(8);\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const entriesValue = (entries) => {\r\n    let list = [];\r\n    for (let i = 1; i <= entries; i++) {\r\n      list.push(\r\n        <option key={i} value={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return list;\r\n  };\r\n\r\n  const handlePrev = () => {};\r\n  const handleNext = () => {};\r\n\r\n  const handleSort = (e) => {\r\n    const sortType = e.currentTarget.value;\r\n    const btnType = state.buttonType;\r\n\r\n    if (sortType === \"fname\" && btnType === false) {\r\n      console.log(\"atc\");\r\n      dispatch({ type: \"fNAME_INCRE\" });\r\n    }\r\n    if (sortType === \"fname\" && btnType === true) {\r\n      console.log(\"atc1\");\r\n      dispatch({ type: \"fNAME_DECRE\" });\r\n    }\r\n\r\n    if (sortType === \"lname\" && btnType === false) {\r\n      dispatch({ type: \"lNAME_INCRE\" });\r\n    }\r\n    if (sortType === \"lname\" && btnType === true) {\r\n      dispatch({ type: \"lNAME_DECRE\" });\r\n    }\r\n\r\n    if (sortType === \"email\" && btnType === false) {\r\n      dispatch({ type: \"EMAIL_INCRE\" });\r\n    }\r\n    if (sortType === \"email\" && btnType === true) {\r\n      dispatch({ type: \"EMAIL_DECRE\" });\r\n    }\r\n\r\n    // if (type === \"date\" && btnType === false) {\r\n    //     dispatch({ type: 'DATE_INCRE'});\r\n    // }\r\n    // if (type === 'date' && btnType === true) {\r\n    //     dispatch({type : 'DATE_DECRE'})\r\n    // }\r\n  };\r\n  // useEffect(() => {\r\n  // },[state.buttonType])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list-staff\">\r\n        <div className=\"tool-bar\">\r\n          <p>\r\n            Show{\" \"}\r\n            {\r\n              <select id=\"entries-quantum\" name=\"entries-quantum\">\r\n                {entriesValue(entries)}\r\n              </select>\r\n            }{\" \"}\r\n            entries\r\n          </p>\r\n          <input type=\"text\" placeholder=\"Search\" />\r\n        </div>\r\n        <div className=\"list-info\">\r\n          <div className=\"list-title\">\r\n            <p>\r\n              Firstname{\" \"}\r\n              <button value=\"fname\" onClick={handleSort}>\r\n                {state.buttonType ? (\r\n                  <FaSortAlphaUp size=\"20\" />\r\n                ) : (\r\n                  <FaSortAlphaDown size=\"20\" />\r\n                )}\r\n              </button>\r\n            </p>\r\n            <p>\r\n              Lastname{\" \"}\r\n              <button value=\"lname\" onClick={handleSort}>\r\n                {state.buttonType ? (\r\n                  <FaSortAlphaUp size=\"20\" />\r\n                ) : (\r\n                  <FaSortAlphaDown size=\"20\" />\r\n                )}\r\n              </button>\r\n            </p>\r\n            <p>\r\n              Email{\" \"}\r\n              <button value=\"email\" onClick={handleSort}>\r\n                {state.buttonType ? (\r\n                  <FaSortAlphaUp size=\"20\" />\r\n                ) : (\r\n                  <FaSortAlphaDown size=\"20\" />\r\n                )}\r\n              </button>\r\n            </p>\r\n            <p>\r\n              Date{\" \"}\r\n              <button value=\"date\" onClick={handleSort}>\r\n                {state.buttonType ? (\r\n                  <FaSortAlphaUp size=\"20\" />\r\n                ) : (\r\n                  <FaSortAlphaDown size=\"20\" />\r\n                )}\r\n              </button>\r\n            </p>\r\n            <p>Profile</p>\r\n          </div>\r\n          <Staff people={[...state.people]} />\r\n          <div className=\"pagination\">\r\n            <button className=\"prev\" onClick={handlePrev}>\r\n              Previous\r\n            </button>\r\n            <button className=\"next\" onClick={handleNext}>\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListStaff;\r\n","import ListStaff from \"./components/ListStaff\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            {/* <ListStaff /> */}\n          </Route>\n          <Route path=\"/profile/:id\" children={<Profile />}></Route>\n        </Switch>\n      </Router>\n      <ListStaff />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}