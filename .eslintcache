[{"C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\components\\ReducerSort.js":"1","C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\components\\ListStaff.js":"2","C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\data.js":"3","C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\components\\staff.js":"4","C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\App.js":"5","C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\components\\Profile.js":"6"},{"size":2952,"mtime":1606302289213,"results":"7","hashOfConfig":"8"},{"size":4075,"mtime":1615292288580,"results":"9","hashOfConfig":"8"},{"size":2059,"mtime":1606307125849,"results":"10","hashOfConfig":"8"},{"size":1019,"mtime":1606441924234,"results":"11","hashOfConfig":"8"},{"size":508,"mtime":1615292349632,"results":"12","hashOfConfig":"8"},{"size":563,"mtime":1606442518377,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1dn0ukc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\components\\ReducerSort.js",[],["31","32"],"C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\components\\ListStaff.js",["33","34","35"],"import React from \"react\";\r\nimport \"./ListStaff.css\";\r\nimport { useState, useEffect, useRef, useReducer } from \"react\";\r\nimport { reducer } from \"./ReducerSort\";\r\nimport { data } from \"../data\";\r\nimport Staff from \"./staff\";\r\nimport { FaSortAlphaDown, FaSortAlphaUp } from \"react-icons/fa\";\r\nconst defaultState = {\r\n  people: data,\r\n  buttonType: false,\r\n};\r\nfunction ListStaff() {\r\n  const [entries, setEntries] = useState(8);\r\n  const [state, dispatch] = useReducer(reducer, defaultState);\r\n  const entriesValue = (entries) => {\r\n    let list = [];\r\n    for (let i = 1; i <= entries; i++) {\r\n      list.push(\r\n        <option key={i} value={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return list;\r\n  };\r\n\r\n  const handlePrev = () => {};\r\n  const handleNext = () => {};\r\n\r\n  const handleSort = (e) => {\r\n    const sortType = e.currentTarget.value;\r\n    const btnType = state.buttonType;\r\n\r\n    if (sortType === \"fname\" && btnType === false) {\r\n      console.log(\"atc\");\r\n      dispatch({ type: \"fNAME_INCRE\" });\r\n    }\r\n    if (sortType === \"fname\" && btnType === true) {\r\n      console.log(\"atc1\");\r\n      dispatch({ type: \"fNAME_DECRE\" });\r\n    }\r\n\r\n    if (sortType === \"lname\" && btnType === false) {\r\n      dispatch({ type: \"lNAME_INCRE\" });\r\n    }\r\n    if (sortType === \"lname\" && btnType === true) {\r\n      dispatch({ type: \"lNAME_DECRE\" });\r\n    }\r\n\r\n    if (sortType === \"email\" && btnType === false) {\r\n      dispatch({ type: \"EMAIL_INCRE\" });\r\n    }\r\n    if (sortType === \"email\" && btnType === true) {\r\n      dispatch({ type: \"EMAIL_DECRE\" });\r\n    }\r\n\r\n    // if (type === \"date\" && btnType === false) {\r\n    //     dispatch({ type: 'DATE_INCRE'});\r\n    // }\r\n    // if (type === 'date' && btnType === true) {\r\n    //     dispatch({type : 'DATE_DECRE'})\r\n    // }\r\n  };\r\n  // useEffect(() => {\r\n  // },[state.buttonType])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"list-staff\">\r\n        <div className=\"tool-bar\">\r\n          <p>\r\n            Show{\" \"}\r\n            {\r\n              <select id=\"entries-quantum\" name=\"entries-quantum\">\r\n                {entriesValue(entries)}\r\n              </select>\r\n            }{\" \"}\r\n            entries\r\n          </p>\r\n          <input type=\"text\" placeholder=\"Search\" />\r\n        </div>\r\n        <div className=\"list-info\">\r\n          <div className=\"list-title\">\r\n            <p>\r\n              Firstname{\" \"}\r\n              <button value=\"fname\" onClick={handleSort}>\r\n                {state.buttonType ? (\r\n                  <FaSortAlphaUp size=\"20\" />\r\n                ) : (\r\n                  <FaSortAlphaDown size=\"20\" />\r\n                )}\r\n              </button>\r\n            </p>\r\n            <p>\r\n              Lastname{\" \"}\r\n              <button value=\"lname\" onClick={handleSort}>\r\n                {state.buttonType ? (\r\n                  <FaSortAlphaUp size=\"20\" />\r\n                ) : (\r\n                  <FaSortAlphaDown size=\"20\" />\r\n                )}\r\n              </button>\r\n            </p>\r\n            <p>\r\n              Email{\" \"}\r\n              <button value=\"email\" onClick={handleSort}>\r\n                {state.buttonType ? (\r\n                  <FaSortAlphaUp size=\"20\" />\r\n                ) : (\r\n                  <FaSortAlphaDown size=\"20\" />\r\n                )}\r\n              </button>\r\n            </p>\r\n            <p>\r\n              Date{\" \"}\r\n              <button value=\"date\" onClick={handleSort}>\r\n                {state.buttonType ? (\r\n                  <FaSortAlphaUp size=\"20\" />\r\n                ) : (\r\n                  <FaSortAlphaDown size=\"20\" />\r\n                )}\r\n              </button>\r\n            </p>\r\n            <p>Profile</p>\r\n          </div>\r\n          <Staff people={[...state.people]} />\r\n          <div className=\"pagination\">\r\n            <button className=\"prev\" onClick={handlePrev}>\r\n              Previous\r\n            </button>\r\n            <button className=\"next\" onClick={handleNext}>\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListStaff;\r\n","C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\data.js",[],"C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\components\\staff.js",["36"],"import React from 'react'\r\nimport { useReducer } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './staff.css'\r\nimport Profile from './Profile'\r\n\r\nfunction staff({ people }) {\r\n    const handleCheckProfile = (id) => {\r\n        <Link to={`profile/${id}`} key={id}>\r\n            <Profile id={id}/>\r\n            \r\n        </Link>\r\n    }\r\n    return (\r\n        <div className=\"list-person\">\r\n            {people.map((person) => {\r\n                const { id, firstName, lastName, email, date } = person;\r\n                return (\r\n                    <div key={id} className=\"person-info\">\r\n                        <p>{firstName}</p>\r\n                        <p>{lastName}</p>\r\n                        <p>{email}</p>\r\n                        <p>{date}</p>\r\n                        <button className=\"check-person\" onClick={handleCheckProfile(id)}> Go to profile</button>\r\n                    </div> \r\n                    );   \r\n            })}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default staff\r\n","C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\App.js",["37"],"import ListStaff from \"./components/ListStaff\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Profile from \"./components/Profile\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            {/* <ListStaff /> */}\n          </Route>\n          <Route path=\"/profile/:id\" children={<Profile />}></Route>\n        </Switch>\n      </Router>\n      <ListStaff />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\kimhi\\Desktop\\project-practice\\list-staff\\src\\components\\Profile.js",["38","39"],"import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { data} from '../data'\r\n\r\nfunction Profile({ id }) {\r\n    const [list, setList] = useState(data);\r\n    const [person, setPerson] = useState({id:'',name:'',email:'',date:''});\r\n    const personProfile = () => {\r\n        setPerson(list.filter((person) => person.id === id));\r\n        console.log(list);\r\n    }\r\n    return (\r\n        <div>\r\n            <p>{personProfile}</p>    \r\n        <Link to='/'>Back to home</Link>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":20,"nodeType":"46","messageId":"47","endLine":3,"endColumn":29},{"ruleId":"44","severity":1,"message":"48","line":3,"column":31,"nodeType":"46","messageId":"47","endLine":3,"endColumn":37},{"ruleId":"44","severity":1,"message":"49","line":13,"column":19,"nodeType":"46","messageId":"47","endLine":13,"endColumn":29},{"ruleId":"44","severity":1,"message":"50","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":20},{"ruleId":"44","severity":1,"message":"51","line":2,"column":50,"nodeType":"46","messageId":"47","endLine":2,"endColumn":54},{"ruleId":"44","severity":1,"message":"52","line":6,"column":18,"nodeType":"46","messageId":"47","endLine":6,"endColumn":25},{"ruleId":"44","severity":1,"message":"53","line":7,"column":12,"nodeType":"46","messageId":"47","endLine":7,"endColumn":18},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'setEntries' is assigned a value but never used.","'useReducer' is defined but never used.","'Link' is defined but never used.","'setList' is assigned a value but never used.","'person' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]